{"version":3,"sources":["./src/app/my-profile/my-profile.page.html","./src/app/my-profile/profile-modal/profile-modal.component.html","./src/app/my-profile/my-profile-routing.module.ts","./src/app/my-profile/my-profile.module.ts","./src/app/my-profile/my-profile.page.scss","./src/app/my-profile/my-profile.page.ts","./src/app/my-profile/profile-modal/profile-modal.component.scss","./src/app/my-profile/profile-modal/profile-modal.component.ts","./src/app/my-profile/profile.service.ts"],"names":[],"mappings":"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","file":"my-profile-my-profile-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar>\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-menu-button></ion-menu-button>\\n\\t\\t</ion-buttons>\\n\\t\\t<ion-title>\\n\\t\\t\\tMy Account\\n\\t\\t</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"bg_color\\\">\\n\\t<ion-card>\\n\\t\\t<ion-card-header>\\n\\t\\t  <ion-card-title>My Profile</ion-card-title>\\n\\t\\t</ion-card-header>\\n\\t  \\n\\t\\t<ion-card-content>\\n\\t\\t\\t<ion-list lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">User ID</ion-label>\\n\\t\\t\\t\\t\\t<ion-badge color=\\\"warning\\\">{{user_id}}</ion-badge>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">Fullname</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"name\\\" value=\\\"{{userFullname}}\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">{{\\\"email_address\\\" | translate}}</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"email\\\" value=\\\"{{email}}\\\" readonly=\\\"true\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">{{\\\"phone_number\\\" | translate}}</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"text\\\" value=\\\"{{phoneno}}\\\" readonly=\\\"true\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t</ion-list>\\n\\t\\t\\t<ion-button expand=\\\"block\\\" (click)=\\\"openModal(1)\\\">\\n\\t\\t\\t\\t<ion-icon slot=\\\"start\\\" name=\\\"pencil\\\"></ion-icon>\\n\\t\\t\\t\\tEdit Profile\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-card-content>\\n\\t  </ion-card>\\n\\t<!-- <ion-card>\\n\\t\\t<div class=\\\"form\\\">\\n\\t\\t\\t<h2>My Profile</h2>\\n\\t\\t\\t<ion-list lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">User ID</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"name\\\" value=\\\"{{user_id}}\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">Fullname</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"name\\\" value=\\\"{{userFullname}}\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">{{\\\"email_address\\\" | translate}}</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"email\\\" value=\\\"{{email}}\\\" readonly=\\\"true\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">{{\\\"phone_number\\\" | translate}}</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"text\\\" value=\\\"{{phoneno}}\\\" readonly=\\\"true\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t</ion-list>\\n\\t\\t\\t<ion-button expand=\\\"block\\\" (click)=\\\"openModal(1)\\\">\\n\\t\\t\\t\\t<ion-icon slot=\\\"start\\\" name=\\\"pencil\\\"></ion-icon>\\n\\t\\t\\t\\tEdit Profile\\n\\t\\t\\t</ion-button>\\n\\t\\t</div>\\n\\t</ion-card> -->\\n\\t<ion-card>\\n\\t\\t<ion-card-header>\\n\\t\\t  <ion-card-title>My Addresses</ion-card-title>\\n\\t\\t</ion-card-header>\\n\\t  \\n\\t\\t<ion-card-content>\\n\\t\\t\\t<ion-list lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<div class=\\\"item_inner\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"text_box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ion-badge color=\\\"secondary\\\">Home</ion-badge>\\n\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{home_address}}\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<div class=\\\"item_inner\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"text_box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ion-badge color=\\\"secondary\\\">Office</ion-badge>\\n\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{office_address}}\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<div class=\\\"item_inner\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"text_box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ion-badge color=\\\"secondary\\\">Other</ion-badge>\\n\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{other_address}}\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t</ion-list>\\n\\t\\t\\t<ion-button expand=\\\"block\\\" (click)=\\\"openModal(2)\\\">\\n\\t\\t\\t\\t<ion-icon slot=\\\"start\\\" name=\\\"pencil\\\"></ion-icon>\\n\\t\\t\\t\\tEdit Addresses\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-card-content>\\n\\t  </ion-card>\\n\\t<ion-card class=\\\"my_addresses\\\">\\n\\t\\t<div class=\\\"form\\\">\\n\\t\\t\\t<h2>My Addresses </h2>\\n\\t\\t\\t<ion-list lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<div class=\\\"item_inner\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"text_box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"d-flex\\\">Home</h3>\\n\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{home_address}}\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<div class=\\\"item_inner\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"text_box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"d-flex\\\">Office</h3>\\n\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{office_address}}\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<div class=\\\"item_inner\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"text_box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"d-flex\\\">Other</h3>\\n\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{other_address}}\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t</ion-list>\\n\\t\\t\\t<ion-button expand=\\\"block\\\" (click)=\\\"openModal(2)\\\">\\n\\t\\t\\t\\t<ion-icon slot=\\\"start\\\" name=\\\"pencil\\\"></ion-icon>\\n\\t\\t\\t\\tEdit Addresses\\n\\t\\t\\t</ion-button>\\n\\t\\t</div>\\n\\t</ion-card>\\n</ion-content>\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      {{ page_title }}\\n    </ion-title>\\n    <ion-buttons slot=\\\"primary\\\"> \\n      <ion-button (click)=\\\"closeModal()\\\">\\n        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <ion-card *ngIf=\\\"category == 1 && !isLoading\\\">\\n    <ion-card-header>\\n      <ion-card-title>Card Title</ion-card-title>\\n    </ion-card-header>\\n  \\n    <ion-card-content>\\n      <form [formGroup]=\\\"myProfile\\\">\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">\\n            Fullname (As in NRIC) *\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"fullname\\\"></ion-input>\\n        </ion-item>\\n        \\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"!myProfile.get('fullname').value && myProfile.get('fullname').touched\\\">\\n          <small class=\\\"error-message\\\">This field is required.</small>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">\\n            Email *\\n          </ion-label>\\n          <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" email></ion-input>\\n        </ion-item>\\n\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">\\n            Phone Number\\n          </ion-label>\\n          <ion-input type=\\\"number\\\" formControlName=\\\"phoneno\\\"></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"myProfile.get('phoneno').value && myProfile.get('phoneno').touched && !myProfile.get('phoneno').valid\\\">\\n          <small class=\\\"error-message\\\">You have not given a correct phone number.</small>\\n        </ion-item>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card *ngIf=\\\"category == 2 && !isLoading\\\">\\n    <ion-card-header>\\n      <ion-card-title>Card Title</ion-card-title>\\n    </ion-card-header>\\n  \\n    <ion-card-content>\\n      <form [formGroup]=\\\"myAddresses\\\">\\n        <ion-item>\\n            <ion-label position=\\\"stacked\\\">\\n              Home Address\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"home_address\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"!myAddresses.get('home_address').value && myAddresses.get('home_address').touched\\\">\\n          <small class=\\\"error-message\\\">This field is required.</small>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">\\n            Office Address\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"office_address\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"!myAddresses.get('office_address').value && myAddresses.get('office_address').touched\\\">\\n          <small class=\\\"error-message\\\">This field is required.</small>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">\\n            Other Address\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"other_address\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"!myAddresses.get('other_address').value && myAddresses.get('other_address').touched\\\">\\n          <small class=\\\"error-message\\\">This field is required.</small>\\n        </ion-item>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-grid>\\n    <ion-row>\\n      <!-- <ion-col size-md=\\\"12\\\" offset-md=\\\"0\\\" size-sm=\\\"6\\\" offset-sm=\\\"3\\\" *ngIf=\\\"category == 1 && !isLoading\\\">\\n        <form [formGroup]=\\\"myProfile\\\">\\n\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">\\n              Fullname (As in NRIC) *\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"fullname\\\"></ion-input>\\n          </ion-item>\\n          \\n          <ion-item lines=\\\"none\\\" *ngIf=\\\"!myProfile.get('fullname').value && myProfile.get('fullname').touched\\\">\\n            <small class=\\\"error-message\\\">This field is required.</small>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">\\n              Email *\\n            </ion-label>\\n            <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" email readonly></ion-input>\\n          </ion-item>\\n\\n\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">\\n              Phone Number\\n            </ion-label>\\n            <ion-input type=\\\"number\\\" formControlName=\\\"phoneno\\\" readonly></ion-input>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\" *ngIf=\\\"myProfile.get('phoneno').value && myProfile.get('phoneno').touched && !myProfile.get('phoneno').valid\\\">\\n            <small class=\\\"error-message\\\">You have not given a correct phone number.</small>\\n          </ion-item>\\n\\n        </form>\\n      </ion-col> -->\\n\\n      <!-- <ion-col size-md=\\\"12\\\" offset-md=\\\"0\\\" size-sm=\\\"6\\\" offset-sm=\\\"3\\\" *ngIf=\\\"category == 2 && !isLoading\\\">\\n        <form [formGroup]=\\\"myAddresses\\\">\\n          <ion-item>\\n              <ion-label position=\\\"stacked\\\">\\n                Home Address\\n              </ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"home_address\\\"></ion-input>\\n          </ion-item>\\n\\n          <ion-item lines=\\\"none\\\" *ngIf=\\\"!myAddresses.get('home_address').value && myAddresses.get('home_address').touched\\\">\\n            <small class=\\\"error-message\\\">This field is required.</small>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">\\n              Office Address\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"office_address\\\"></ion-input>\\n          </ion-item>\\n\\n          <ion-item lines=\\\"none\\\" *ngIf=\\\"!myAddresses.get('office_address').value && myAddresses.get('office_address').touched\\\">\\n            <small class=\\\"error-message\\\">This field is required.</small>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">\\n              Other Address\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"other_address\\\"></ion-input>\\n          </ion-item>\\n\\n          <ion-item lines=\\\"none\\\" *ngIf=\\\"!myAddresses.get('other_address').value && myAddresses.get('other_address').touched\\\">\\n            <small class=\\\"error-message\\\">This field is required.</small>\\n          </ion-item>\\n        </form>\\n      </ion-col> -->\\n\\n    </ion-row>\\n\\n    <ion-row *ngIf=\\\"!isLoading\\\">\\n      <ion-col size-md=\\\"12\\\" offset-md=\\\"0\\\" size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n        <ion-button class=\\\"submitButton\\\" expand=\\\"block\\\" fill=\\\"outline\\\" (click)=\\\"onSave(category)\\\" >Save</ion-button>\\n      </ion-col>\\n    </ion-row>\\n\\n\\n  </ion-grid>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MyProfilePage } from './my-profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MyProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MyProfilePageRoutingModule } from './my-profile-routing.module';\n\nimport { MyProfilePage } from './my-profile.page';\nimport { ProfileModalComponent } from './profile-modal/profile-modal.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n\t  TranslateModule,   \n    MyProfilePageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [MyProfilePage, ProfileModalComponent], \n  entryComponents : [ProfileModalComponent]\n})\nexport class MyProfilePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LXByb2ZpbGUvbXktcHJvZmlsZS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\nimport { MenuController, IonRouterOutlet, Platform, LoadingController, ModalController } from '@ionic/angular';\nimport { NetworkService } from '../providers/network.service';\nimport { ProfileService } from './profile.service';\nimport { ProfileModalComponent } from './profile-modal/profile-modal.component';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.page.html',\n  styleUrls: ['./my-profile.page.scss'],\n})\nexport class MyProfilePage implements OnInit {\n  user_id : number;\n  fullname = '';\n  email = '';\n  phoneno = '';\n  registerAt = '';\n  userFullname = '';\n  home_address = '';\n  office_address = '';\n  other_address = '';\n\n  isLoading : boolean = false;\n\n  constructor(\n    private route: Router,\n    private authService : AuthService,\n    private menuCtrl : MenuController,\n    private routerOutlet : IonRouterOutlet,\n    private platform : Platform,\n    private loadingCtrl : LoadingController,\n    private networkService : NetworkService,\n    private profileService : ProfileService,\n    private modalCtrl : ModalController\n    ) { }\n\n  ngOnInit() {\n    this.authService.userFullname.subscribe(fullname => {\n      this.userFullname = fullname;\n    })\n\n    this.profileService.getProfileData().subscribe(resData => {\n      \n      this.user_id = resData.user_id;\n      this.fullname = resData.fullname;\n      this.email = resData.email;\n      this.phoneno = resData.phoneno;\n      this.registerAt = resData.registerAt;\n      this.home_address = resData.home_address;\n      this.office_address = resData.office_address;\n      this.other_address = resData.other_address;\n    })\n  }\n  \n  ionViewDidEnter(){\n    this.networkService.checkNetworkConnection();\n    // this.menuCtrl.enable(true, 'menu');\n    // this.routerOutlet.swipeGesture = false;\n\n  }\n\n  openModal(category : number){\n    let title : string;\n\n    if (category == 1){\n      title = 'My Profile';\n    }\n    else{\n      title = 'My Addresses';\n    }\n\n    this.modalCtrl.create({\n      component : ProfileModalComponent,\n      componentProps : {page_title : title, category : category}\n    }).then(modalEl => {\n      modalEl.present();\n    })\n  }\n\n  \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LXByb2ZpbGUvcHJvZmlsZS1tb2RhbC9wcm9maWxlLW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController, LoadingController, AlertController } from '@ionic/angular';\nimport { ProfileService } from '../profile.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Plugins,Storage } from '@capacitor/core';\n\n@Component({\n  selector: 'app-profile-modal',\n  templateUrl: './profile-modal.component.html',\n  styleUrls: ['./profile-modal.component.scss'],\n})\nexport class ProfileModalComponent implements OnInit {\n\n  @Input() page_title;\n  @Input() category;\n\n  myProfile : FormGroup;\n  myAddresses : FormGroup;\n\n  isLoading = false;\n\n  constructor(\n    private profileService : ProfileService,\n    private modalCtrl : ModalController,\n    private loadingCtrl : LoadingController,\n    private authService : AuthService,\n    private alertCtrl : AlertController \n  ) { }\n\n  ngOnInit() {  \n    this.myProfile = new FormGroup({\n      fullname : new FormControl(null, {\n        validators: [Validators.required]\n      }),\n      email : new FormControl(null, {\n        validators : [Validators.required]\n      }),\n      phoneno : new FormControl(null, {\n        validators : [Validators.required, this.checkIsNumber.bind(this)]\n      })\n    })\n\n    this.myAddresses = new FormGroup({\n      home_address : new FormControl(null, {\n        validators : [Validators.required]\n      }),\n      office_address : new FormControl(null, {\n        validators : [Validators.required]\n      }),\n      other_address : new FormControl(null, {\n        validators : [Validators.required]\n      })\n    })\n\n    this.loadingCtrl.create({\n      message : 'Loading...'\n    }).then(loadingEl => {\n      loadingEl.present();\n      this.isLoading = true;\n\n      this.profileService.getProfileData().subscribe(resData => {\n        console.log(resData);\n        \n        this.myProfile.get('fullname').setValue(resData.fullname);\n        this.myProfile.get('email').setValue(resData.email);\n        this.myProfile.get('phoneno').setValue(resData.phoneno);\n\n        this.myAddresses.get('home_address').setValue(resData.home_address);\n        this.myAddresses.get('office_address').setValue(resData.office_address);\n        this.myAddresses.get('other_address').setValue(resData.other_address);\n\n        loadingEl.dismiss();\n        this.isLoading = false;\n      })\n    })\n  }\n\n  checkIsNumber(control : FormControl){\n    if(isNaN(control.value)){\n      return {invalid_format : true};\n    }\n  }\n\n  onSave(category : number){\n    if (category == 1){\n      this.myProfile.markAllAsTouched();\n      if(!this.myProfile.valid){\n        return;\n      }\n\n      this.loadingCtrl.create({\n        message : 'Processing...'\n      }).then(loadingEl => {\n        loadingEl.present();\n        this.profileService.updateProfile(1, this.myProfile.value).subscribe(resData =>{\n          if(resData.valid){\n            Plugins.Storage.get({key : 'authData'}).then(result => {\n              const oldData = JSON.parse(result.value) as {\n                user_id : string;\n                email : string;\n                fullname : string;\n                phoneno : string;\n                session_id : string;\n              }\n\n              this.authService.setUserData(oldData.user_id, resData.update_email, resData.update_fullname, oldData.session_id, resData.update_phoneno);\n\n            })\n\n            this.modalCtrl.dismiss({'dismissed' : true});\n          }\n          else{\n            this.alertCtrl.create({\n              header : 'Oh-oh!',\n              message : 'Failed to update. Please try again later',\n              buttons : ['Okay']\n            }).then(alertEl => {\n              alertEl.present();\n            })\n          }\n\n          loadingEl.dismiss();\n        })\n      })\n    }\n    else if (category == 2){\n      this.myAddresses.markAllAsTouched();\n      if(!this.myAddresses.valid){\n        return;\n      }\n\n      this.loadingCtrl.create({\n        message : 'Processing...'\n      }).then(loadingEl => {\n        loadingEl.present();\n        this.profileService.updateProfile(2, this.myAddresses.value).subscribe(resData => {\n          if(resData.valid){\n            this.modalCtrl.dismiss({'dismissed' : true});\n          }\n          else{\n            this.alertCtrl.create({\n              header : 'Oops',\n              message : 'Failed to update. Please try again later',\n              buttons : ['Okay']\n            }).then(alertEl => {\n              alertEl.present();\n            })\n          }\n          loadingEl.dismiss();\n        });\n      })\n    }\n  }\n\n  closeModal(){\n    this.modalCtrl.dismiss({'dismissed': true});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../auth/auth.service';\nimport { switchMap, take } from 'rxjs/operators';\nimport { NumericValueAccessor } from '@ionic/angular';\n\n\ninterface userProfileData {\n  user_id : number;\n  email : string;\n  fullname : string;\n  phoneno : string;\n  registerAt : string;\n  home_address : string;\n  office_address : string;\n  other_address : string;\n}\n\ninterface updateUserProfileData {\n  valid : Boolean,\n  update_fullname : string,\n  update_email : string,\n  update_phoneno : string\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  private _url : string = \"http://ecommerce.x-cow.com/api/action.php\";\n\n  constructor(\n    private http : HttpClient,\n    private authService : AuthService\n  ) { }\n\n  getProfileData(){\n    return this.authService.userId.pipe(\n      take(1),\n      switchMap(user_id => {\n        let formData = new FormData();\n        formData.append(\"action\", \"getProfileDataById\");\n        formData.append(\"user_id\", user_id);\n\n        return this.http.post<userProfileData>(this._url, formData);\n      })\n    )\n  }\n\n  updateProfile(category: number, value : any){\n    return this.authService.userId.pipe(\n      take(1),\n      switchMap(user_id => {\n        let formData = new FormData();\n        formData.append('action', 'updateProfile');\n        formData.append('user_id', user_id);\n        formData.append('category', category.toString());\n\n        if (category == 1){\n          formData.append('fullname', value.fullname);\n          formData.append('email', value.email);\n          formData.append('phoneno', value.phoneno);\n        }\n        else if (category == 2){\n          formData.append('home_address', value.home_address);\n          formData.append('office_address', value.office_address);\n          formData.append('other_address', value.other_address);\n        }\n\n        return this.http.post<updateUserProfileData>(this._url, formData);\n      })\n    )\n  }\n}\n"],"sourceRoot":"webpack:///"}