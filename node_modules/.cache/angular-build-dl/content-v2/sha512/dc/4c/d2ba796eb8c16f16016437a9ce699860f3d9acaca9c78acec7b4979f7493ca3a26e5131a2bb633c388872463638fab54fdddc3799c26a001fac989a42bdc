{"version":3,"sources":["webpack:///src/app/my-profile/my-profile.page.html","webpack:///src/app/my-profile/profile-modal/profile-modal.component.html","webpack:///src/app/my-profile/my-profile-routing.module.ts","webpack:///src/app/my-profile/my-profile.module.ts","webpack:///src/app/my-profile/my-profile.page.scss","webpack:///src/app/my-profile/my-profile.page.ts","webpack:///src/app/my-profile/profile-modal/profile-modal.component.scss","webpack:///src/app/my-profile/profile-modal/profile-modal.component.ts","webpack:///src/app/my-profile/profile.service.ts"],"names":["routes","path","component","MyProfilePageRoutingModule","imports","forChild","exports","MyProfilePageModule","declarations","entryComponents","MyProfilePage","route","authService","menuCtrl","routerOutlet","platform","loadingCtrl","networkService","profileService","modalCtrl","fullname","email","phoneno","registerAt","userFullname","home_address","office_address","other_address","isLoading","subscribe","getProfileData","resData","user_id","checkNetworkConnection","category","title","create","componentProps","page_title","then","modalEl","present","selector","template","ProfileModalComponent","alertCtrl","myProfile","validators","required","checkIsNumber","bind","myAddresses","message","loadingEl","console","log","get","setValue","dismiss","control","isNaN","value","invalid_format","markAllAsTouched","valid","updateProfile","Storage","key","result","oldData","JSON","parse","setUserData","update_email","update_fullname","session_id","update_phoneno","header","buttons","alertEl","ProfileService","http","_url","userId","pipe","formData","FormData","append","post","toString","providedIn"],"mappings":"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","file":"my-profile-my-profile-module-es5.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar>\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-menu-button></ion-menu-button>\\n\\t\\t</ion-buttons>\\n\\t\\t<ion-title>\\n\\t\\t\\tMy Account\\n\\t\\t</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"bg_color\\\">\\n\\t<ion-card>\\n\\t\\t<ion-card-header>\\n\\t\\t  <ion-card-title>My Profile</ion-card-title>\\n\\t\\t</ion-card-header>\\n\\t  \\n\\t\\t<ion-card-content>\\n\\t\\t\\t<ion-list lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">User ID</ion-label>\\n\\t\\t\\t\\t\\t<ion-badge color=\\\"warning\\\">{{user_id}}</ion-badge>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">Fullname</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"name\\\" value=\\\"{{userFullname}}\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">{{\\\"email_address\\\" | translate}}</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"email\\\" value=\\\"{{email}}\\\" readonly=\\\"true\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">{{\\\"phone_number\\\" | translate}}</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"text\\\" value=\\\"{{phoneno}}\\\" readonly=\\\"true\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t</ion-list>\\n\\t\\t\\t<ion-button expand=\\\"block\\\" (click)=\\\"openModal(1)\\\">\\n\\t\\t\\t\\t<ion-icon slot=\\\"start\\\" name=\\\"pencil\\\"></ion-icon>\\n\\t\\t\\t\\tEdit Profile\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-card-content>\\n\\t  </ion-card>\\n\\t<!-- <ion-card>\\n\\t\\t<div class=\\\"form\\\">\\n\\t\\t\\t<h2>My Profile</h2>\\n\\t\\t\\t<ion-list lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">User ID</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"name\\\" value=\\\"{{user_id}}\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">Fullname</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"name\\\" value=\\\"{{userFullname}}\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">{{\\\"email_address\\\" | translate}}</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"email\\\" value=\\\"{{email}}\\\" readonly=\\\"true\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">{{\\\"phone_number\\\" | translate}}</ion-label>\\n\\t\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"text\\\" value=\\\"{{phoneno}}\\\" readonly=\\\"true\\\"></ion-input>\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t</ion-list>\\n\\t\\t\\t<ion-button expand=\\\"block\\\" (click)=\\\"openModal(1)\\\">\\n\\t\\t\\t\\t<ion-icon slot=\\\"start\\\" name=\\\"pencil\\\"></ion-icon>\\n\\t\\t\\t\\tEdit Profile\\n\\t\\t\\t</ion-button>\\n\\t\\t</div>\\n\\t</ion-card> -->\\n\\t<ion-card>\\n\\t\\t<ion-card-header>\\n\\t\\t  <ion-card-title>My Addresses</ion-card-title>\\n\\t\\t</ion-card-header>\\n\\t  \\n\\t\\t<ion-card-content>\\n\\t\\t\\t<ion-list lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<div class=\\\"item_inner\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"text_box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ion-badge color=\\\"secondary\\\">Home</ion-badge>\\n\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{home_address}}\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<div class=\\\"item_inner\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"text_box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ion-badge color=\\\"secondary\\\">Office</ion-badge>\\n\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{office_address}}\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<div class=\\\"item_inner\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"text_box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ion-badge color=\\\"secondary\\\">Other</ion-badge>\\n\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{other_address}}\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t</ion-list>\\n\\t\\t\\t<ion-button expand=\\\"block\\\" (click)=\\\"openModal(2)\\\">\\n\\t\\t\\t\\t<ion-icon slot=\\\"start\\\" name=\\\"pencil\\\"></ion-icon>\\n\\t\\t\\t\\tEdit Addresses\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-card-content>\\n\\t  </ion-card>\\n\\t<ion-card class=\\\"my_addresses\\\">\\n\\t\\t<div class=\\\"form\\\">\\n\\t\\t\\t<h2>My Addresses </h2>\\n\\t\\t\\t<ion-list lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<div class=\\\"item_inner\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"text_box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"d-flex\\\">Home</h3>\\n\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{home_address}}\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<div class=\\\"item_inner\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"text_box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"d-flex\\\">Office</h3>\\n\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{office_address}}\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<div class=\\\"item_inner\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"text_box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"d-flex\\\">Other</h3>\\n\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{other_address}}\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t</ion-list>\\n\\t\\t\\t<ion-button expand=\\\"block\\\" (click)=\\\"openModal(2)\\\">\\n\\t\\t\\t\\t<ion-icon slot=\\\"start\\\" name=\\\"pencil\\\"></ion-icon>\\n\\t\\t\\t\\tEdit Addresses\\n\\t\\t\\t</ion-button>\\n\\t\\t</div>\\n\\t</ion-card>\\n</ion-content>\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      {{ page_title }}\\n    </ion-title>\\n    <ion-buttons slot=\\\"primary\\\"> \\n      <ion-button (click)=\\\"closeModal()\\\">\\n        <ion-icon name=\\\"close-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <ion-card *ngIf=\\\"category == 1 && !isLoading\\\">\\n    <ion-card-header>\\n      <ion-card-title>Card Title</ion-card-title>\\n    </ion-card-header>\\n  \\n    <ion-card-content>\\n      <form [formGroup]=\\\"myProfile\\\">\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">\\n            Fullname (As in NRIC) *\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"fullname\\\"></ion-input>\\n        </ion-item>\\n        \\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"!myProfile.get('fullname').value && myProfile.get('fullname').touched\\\">\\n          <small class=\\\"error-message\\\">This field is required.</small>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">\\n            Email *\\n          </ion-label>\\n          <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" email></ion-input>\\n        </ion-item>\\n\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">\\n            Phone Number\\n          </ion-label>\\n          <ion-input type=\\\"number\\\" formControlName=\\\"phoneno\\\"></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"myProfile.get('phoneno').value && myProfile.get('phoneno').touched && !myProfile.get('phoneno').valid\\\">\\n          <small class=\\\"error-message\\\">You have not given a correct phone number.</small>\\n        </ion-item>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card *ngIf=\\\"category == 2 && !isLoading\\\">\\n    <ion-card-header>\\n      <ion-card-title>Card Title</ion-card-title>\\n    </ion-card-header>\\n  \\n    <ion-card-content>\\n      <form [formGroup]=\\\"myAddresses\\\">\\n        <ion-item>\\n            <ion-label position=\\\"stacked\\\">\\n              Home Address\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"home_address\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"!myAddresses.get('home_address').value && myAddresses.get('home_address').touched\\\">\\n          <small class=\\\"error-message\\\">This field is required.</small>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">\\n            Office Address\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"office_address\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"!myAddresses.get('office_address').value && myAddresses.get('office_address').touched\\\">\\n          <small class=\\\"error-message\\\">This field is required.</small>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">\\n            Other Address\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"other_address\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"!myAddresses.get('other_address').value && myAddresses.get('other_address').touched\\\">\\n          <small class=\\\"error-message\\\">This field is required.</small>\\n        </ion-item>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-grid>\\n    <ion-row>\\n      <!-- <ion-col size-md=\\\"12\\\" offset-md=\\\"0\\\" size-sm=\\\"6\\\" offset-sm=\\\"3\\\" *ngIf=\\\"category == 1 && !isLoading\\\">\\n        <form [formGroup]=\\\"myProfile\\\">\\n\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">\\n              Fullname (As in NRIC) *\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"fullname\\\"></ion-input>\\n          </ion-item>\\n          \\n          <ion-item lines=\\\"none\\\" *ngIf=\\\"!myProfile.get('fullname').value && myProfile.get('fullname').touched\\\">\\n            <small class=\\\"error-message\\\">This field is required.</small>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">\\n              Email *\\n            </ion-label>\\n            <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" email readonly></ion-input>\\n          </ion-item>\\n\\n\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">\\n              Phone Number\\n            </ion-label>\\n            <ion-input type=\\\"number\\\" formControlName=\\\"phoneno\\\" readonly></ion-input>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\" *ngIf=\\\"myProfile.get('phoneno').value && myProfile.get('phoneno').touched && !myProfile.get('phoneno').valid\\\">\\n            <small class=\\\"error-message\\\">You have not given a correct phone number.</small>\\n          </ion-item>\\n\\n        </form>\\n      </ion-col> -->\\n\\n      <!-- <ion-col size-md=\\\"12\\\" offset-md=\\\"0\\\" size-sm=\\\"6\\\" offset-sm=\\\"3\\\" *ngIf=\\\"category == 2 && !isLoading\\\">\\n        <form [formGroup]=\\\"myAddresses\\\">\\n          <ion-item>\\n              <ion-label position=\\\"stacked\\\">\\n                Home Address\\n              </ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"home_address\\\"></ion-input>\\n          </ion-item>\\n\\n          <ion-item lines=\\\"none\\\" *ngIf=\\\"!myAddresses.get('home_address').value && myAddresses.get('home_address').touched\\\">\\n            <small class=\\\"error-message\\\">This field is required.</small>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">\\n              Office Address\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"office_address\\\"></ion-input>\\n          </ion-item>\\n\\n          <ion-item lines=\\\"none\\\" *ngIf=\\\"!myAddresses.get('office_address').value && myAddresses.get('office_address').touched\\\">\\n            <small class=\\\"error-message\\\">This field is required.</small>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">\\n              Other Address\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"other_address\\\"></ion-input>\\n          </ion-item>\\n\\n          <ion-item lines=\\\"none\\\" *ngIf=\\\"!myAddresses.get('other_address').value && myAddresses.get('other_address').touched\\\">\\n            <small class=\\\"error-message\\\">This field is required.</small>\\n          </ion-item>\\n        </form>\\n      </ion-col> -->\\n\\n    </ion-row>\\n\\n    <ion-row *ngIf=\\\"!isLoading\\\">\\n      <ion-col size-md=\\\"12\\\" offset-md=\\\"0\\\" size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n        <ion-button class=\\\"submitButton\\\" expand=\\\"block\\\" fill=\\\"outline\\\" (click)=\\\"onSave(category)\\\" >Save</ion-button>\\n      </ion-col>\\n    </ion-row>\\n\\n\\n  </ion-grid>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MyProfilePage } from './my-profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MyProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MyProfilePageRoutingModule } from './my-profile-routing.module';\n\nimport { MyProfilePage } from './my-profile.page';\nimport { ProfileModalComponent } from './profile-modal/profile-modal.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n\t  TranslateModule,   \n    MyProfilePageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [MyProfilePage, ProfileModalComponent], \n  entryComponents : [ProfileModalComponent]\n})\nexport class MyProfilePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LXByb2ZpbGUvbXktcHJvZmlsZS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\nimport { MenuController, IonRouterOutlet, Platform, LoadingController, ModalController } from '@ionic/angular';\nimport { NetworkService } from '../providers/network.service';\nimport { ProfileService } from './profile.service';\nimport { ProfileModalComponent } from './profile-modal/profile-modal.component';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.page.html',\n  styleUrls: ['./my-profile.page.scss'],\n})\nexport class MyProfilePage implements OnInit {\n  user_id : number;\n  fullname = '';\n  email = '';\n  phoneno = '';\n  registerAt = '';\n  userFullname = '';\n  home_address = '';\n  office_address = '';\n  other_address = '';\n\n  isLoading : boolean = false;\n\n  constructor(\n    private route: Router,\n    private authService : AuthService,\n    private menuCtrl : MenuController,\n    private routerOutlet : IonRouterOutlet,\n    private platform : Platform,\n    private loadingCtrl : LoadingController,\n    private networkService : NetworkService,\n    private profileService : ProfileService,\n    private modalCtrl : ModalController\n    ) { }\n\n  ngOnInit() {\n    this.authService.userFullname.subscribe(fullname => {\n      this.userFullname = fullname;\n    })\n\n    this.profileService.getProfileData().subscribe(resData => {\n      \n      this.user_id = resData.user_id;\n      this.fullname = resData.fullname;\n      this.email = resData.email;\n      this.phoneno = resData.phoneno;\n      this.registerAt = resData.registerAt;\n      this.home_address = resData.home_address;\n      this.office_address = resData.office_address;\n      this.other_address = resData.other_address;\n    })\n  }\n  \n  ionViewDidEnter(){\n    this.networkService.checkNetworkConnection();\n    // this.menuCtrl.enable(true, 'menu');\n    // this.routerOutlet.swipeGesture = false;\n\n  }\n\n  openModal(category : number){\n    let title : string;\n\n    if (category == 1){\n      title = 'My Profile';\n    }\n    else{\n      title = 'My Addresses';\n    }\n\n    this.modalCtrl.create({\n      component : ProfileModalComponent,\n      componentProps : {page_title : title, category : category}\n    }).then(modalEl => {\n      modalEl.present();\n    })\n  }\n\n  \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LXByb2ZpbGUvcHJvZmlsZS1tb2RhbC9wcm9maWxlLW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController, LoadingController, AlertController } from '@ionic/angular';\nimport { ProfileService } from '../profile.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Plugins,Storage } from '@capacitor/core';\n\n@Component({\n  selector: 'app-profile-modal',\n  templateUrl: './profile-modal.component.html',\n  styleUrls: ['./profile-modal.component.scss'],\n})\nexport class ProfileModalComponent implements OnInit {\n\n  @Input() page_title;\n  @Input() category;\n\n  myProfile : FormGroup;\n  myAddresses : FormGroup;\n\n  isLoading = false;\n\n  constructor(\n    private profileService : ProfileService,\n    private modalCtrl : ModalController,\n    private loadingCtrl : LoadingController,\n    private authService : AuthService,\n    private alertCtrl : AlertController \n  ) { }\n\n  ngOnInit() {  \n    this.myProfile = new FormGroup({\n      fullname : new FormControl(null, {\n        validators: [Validators.required]\n      }),\n      email : new FormControl(null, {\n        validators : [Validators.required]\n      }),\n      phoneno : new FormControl(null, {\n        validators : [Validators.required, this.checkIsNumber.bind(this)]\n      })\n    })\n\n    this.myAddresses = new FormGroup({\n      home_address : new FormControl(null, {\n        validators : [Validators.required]\n      }),\n      office_address : new FormControl(null, {\n        validators : [Validators.required]\n      }),\n      other_address : new FormControl(null, {\n        validators : [Validators.required]\n      })\n    })\n\n    this.loadingCtrl.create({\n      message : 'Loading...'\n    }).then(loadingEl => {\n      loadingEl.present();\n      this.isLoading = true;\n\n      this.profileService.getProfileData().subscribe(resData => {\n        console.log(resData);\n        \n        this.myProfile.get('fullname').setValue(resData.fullname);\n        this.myProfile.get('email').setValue(resData.email);\n        this.myProfile.get('phoneno').setValue(resData.phoneno);\n\n        this.myAddresses.get('home_address').setValue(resData.home_address);\n        this.myAddresses.get('office_address').setValue(resData.office_address);\n        this.myAddresses.get('other_address').setValue(resData.other_address);\n\n        loadingEl.dismiss();\n        this.isLoading = false;\n      })\n    })\n  }\n\n  checkIsNumber(control : FormControl){\n    if(isNaN(control.value)){\n      return {invalid_format : true};\n    }\n  }\n\n  onSave(category : number){\n    if (category == 1){\n      this.myProfile.markAllAsTouched();\n      if(!this.myProfile.valid){\n        return;\n      }\n\n      this.loadingCtrl.create({\n        message : 'Processing...'\n      }).then(loadingEl => {\n        loadingEl.present();\n        this.profileService.updateProfile(1, this.myProfile.value).subscribe(resData =>{\n          if(resData.valid){\n            Plugins.Storage.get({key : 'authData'}).then(result => {\n              const oldData = JSON.parse(result.value) as {\n                user_id : string;\n                email : string;\n                fullname : string;\n                phoneno : string;\n                session_id : string;\n              }\n\n              this.authService.setUserData(oldData.user_id, resData.update_email, resData.update_fullname, oldData.session_id, resData.update_phoneno);\n\n            })\n\n            this.modalCtrl.dismiss({'dismissed' : true});\n          }\n          else{\n            this.alertCtrl.create({\n              header : 'Oh-oh!',\n              message : 'Failed to update. Please try again later',\n              buttons : ['Okay']\n            }).then(alertEl => {\n              alertEl.present();\n            })\n          }\n\n          loadingEl.dismiss();\n        })\n      })\n    }\n    else if (category == 2){\n      this.myAddresses.markAllAsTouched();\n      if(!this.myAddresses.valid){\n        return;\n      }\n\n      this.loadingCtrl.create({\n        message : 'Processing...'\n      }).then(loadingEl => {\n        loadingEl.present();\n        this.profileService.updateProfile(2, this.myAddresses.value).subscribe(resData => {\n          if(resData.valid){\n            this.modalCtrl.dismiss({'dismissed' : true});\n          }\n          else{\n            this.alertCtrl.create({\n              header : 'Oops',\n              message : 'Failed to update. Please try again later',\n              buttons : ['Okay']\n            }).then(alertEl => {\n              alertEl.present();\n            })\n          }\n          loadingEl.dismiss();\n        });\n      })\n    }\n  }\n\n  closeModal(){\n    this.modalCtrl.dismiss({'dismissed': true});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../auth/auth.service';\nimport { switchMap, take } from 'rxjs/operators';\nimport { NumericValueAccessor } from '@ionic/angular';\n\n\ninterface userProfileData {\n  user_id : number;\n  email : string;\n  fullname : string;\n  phoneno : string;\n  registerAt : string;\n  home_address : string;\n  office_address : string;\n  other_address : string;\n}\n\ninterface updateUserProfileData {\n  valid : Boolean,\n  update_fullname : string,\n  update_email : string,\n  update_phoneno : string\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  private _url : string = \"http://ecommerce.x-cow.com/api/action.php\";\n\n  constructor(\n    private http : HttpClient,\n    private authService : AuthService\n  ) { }\n\n  getProfileData(){\n    return this.authService.userId.pipe(\n      take(1),\n      switchMap(user_id => {\n        let formData = new FormData();\n        formData.append(\"action\", \"getProfileDataById\");\n        formData.append(\"user_id\", user_id);\n\n        return this.http.post<userProfileData>(this._url, formData);\n      })\n    )\n  }\n\n  updateProfile(category: number, value : any){\n    return this.authService.userId.pipe(\n      take(1),\n      switchMap(user_id => {\n        let formData = new FormData();\n        formData.append('action', 'updateProfile');\n        formData.append('user_id', user_id);\n        formData.append('category', category.toString());\n\n        if (category == 1){\n          formData.append('fullname', value.fullname);\n          formData.append('email', value.email);\n          formData.append('phoneno', value.phoneno);\n        }\n        else if (category == 2){\n          formData.append('home_address', value.home_address);\n          formData.append('office_address', value.office_address);\n          formData.append('other_address', value.other_address);\n        }\n\n        return this.http.post<updateUserProfileData>(this._url, formData);\n      })\n    )\n  }\n}\n"]}